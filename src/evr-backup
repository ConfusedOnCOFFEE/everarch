#!/bin/bash
# everarch - the hopefully ever lasting archive
# Copyright (C) 2021-2022  Markus Per√∂bner
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.
set -e

# parse args
TEMP=$(getopt -o 'h' --long 'help,backup-glacier-port:,two-way,skip-gpg-keys' -n 'evr-backup' -- "$@")
if [ $? -ne 0 ]; then
	echo 'Terminating...' >&2
	exit 1
fi
eval set -- "$TEMP"
unset TEMP

default_backup_glacier_port=39566
backup_glacier_port=${default_backup_glacier_port}
two_way=0
reverse=0
backup_gpg_keys=1

while true
do
	case "$1" in
            '-h'|'--help')
                cat >&2 <<EOF
Usage: evr-backup [--backup-glacier-port=PORT] [--two-way] HOST:PORT BACKUP_DIR
evr-backup is a utility application for synchronizing the content of an
evr-glacier-storage instance into a backup directory.

After a backup the backup directory will contain an
evr-glacier-storage bucket directory and the backed up public GPG keys
in the gpg-keys-pub.asc file.

A backup can be restored by running the backup script with the
--two-way option. The GPG keys from the backup directory must be
manually imported using the gpg command.

OPTIONS
  --backup-glacier-port PORT
    The port that will be used to run the temporary evr-glacier-storage
    which writes to the backup directory. The default backup-glacier-port
    is ${default_backup_glacier_port}.

  --two-way
    Performes a two-way synchronization from the evr-glacier-storage
    server and backup directory. The default is to just copy blobs from
    the evr-glacier-storage server to the backup directory. With the
    two-way option present the blobs missing in the evr-glacier-storage
    server but present in the backup directory will also be copied to
    the evr-glacier-storage server.

  --reverse
    Performes a synchronization from the backup dir into the
    evr-glacier-storage server.

  --skip-gpg-keys
    Skips backing up the public GPG keys into the backup directory.

  -h, --help
    Shows this help message.

Report bugs to markus.peroebner@gmail.com.
EOF
                exit 0
                ;;
            '--backup-glacier-port')
                backup_glacier_port=$2
                shift 2
                continue
                ;;
            '--two-way')
                two_way=1
                shift
                continue
                ;;
            '--reverse')
                reverse=1
                shift
                continue
                ;;
            'skip-gpg-keys')
                backup_gpg_keys=0
                shift
                continue
                ;;
            '--')
		shift
		break
                ;;
	    *)
		echo 'Internal error!' >&2
		exit 1
		;;
        esac
done

source_glacier=${@:$OPTIND:1}
backup_dir=${@:$OPTIND+1:1}

if [[ -z "${source_glacier}" ]]
then
    echo "Missing source glacier argument" >&2
    exit 1
fi
if [[ -z "${backup_dir}" ]]
then
    echo "Missing backup destination directory argument" >&2
    exit 1
fi

tmpd=`mktemp -d`

cleanup(){
    if [ -e "${tmpd}/glacier.pid" ]
    then
        pid=`cat "${tmpd}/glacier.pid"`
        kill -v -s sigint "${pid}"
        while kill -0 "${pid}" 2>/dev/null
        do
            sleep 0.5
        done
        rm "${tmpd}/glacier.pid"
    fi
    if [ -n "${tmpd}" ]
    then
        rm -rf "${tmpd}"
    fi
}
trap cleanup EXIT

cat > "${tmpd}/cert.conf" <<EOF
[req]
default_bit = 4096
distinguished_name = req_distinguished_name
prompt = no

[req_distinguished_name]
commonName = localhost
countryName = XX
stateOrProvinceName = XX
localityName = Somewhere
organizationName = ACME
EOF

tls_key="${tmpd}/glacier-key.pem"
tls_cert="${tmpd}/glacier-cert.pem"
openssl genrsa -out "${tls_key}" 4096
openssl req -new -key "${tls_key}" -out "${tmpd}/cert.csr" -config "${tmpd}/cert.conf"
openssl x509 -req -days 30 -in "${tmpd}/cert.csr" -signkey "${tls_key}" -out "${tls_cert}"

if [[ "${backup_gpg_keys}" = '1' ]]
then
    gpg --export --armor > "${backup_dir}/gpg-keys-pub.asc"
    sha224sum < "${backup_dir}/gpg-keys-pub.asc" > "${backup_dir}/gpg-keys-pub.asc.sha224"
fi

auth_token=`openssl rand -hex 32`
evr-glacier-storage "--pid=${tmpd}/glacier.pid" -d "${backup_dir}" "--index-db=${backup_dir}/index.db" "--auth-token=${auth_token}" "--cert=${tls_cert}" "--key=${tls_key}" '--host=localhost' -p "${backup_glacier_port}"

evr_sync_opts=
if [[ "${two_way}" = '1' ]]
then
    evr_sync_opts+=--two-way
fi

if [[ "${reverse}" = '1' ]]
then
    sync_src="localhost:${backup_glacier_port}"
    sync_dst="${source_glacier}"
else
    sync_src="${source_glacier}"
    sync_dst="localhost:${backup_glacier_port}"
fi

evr sync ${evr_sync_opts} "${sync_src}" "${sync_dst}" '--dest-sync=avoid' "--auth-token=localhost:${backup_glacier_port}:${auth_token}" "--ssl-cert=localhost:${backup_glacier_port}:${tls_cert}"
