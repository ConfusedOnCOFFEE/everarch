#!/bin/bash
set -e
. ../config

rm -rf 'files'
mkdir 'files'
echo 'hello world!' > './files/hello.txt'

allocate_ports
write_evr_conf
trap stop_everarch_servers EXIT

start_glacier_storage
wait_for_glacier_storage

test_file_put_pop(){
    local base_name="$1"
    echo "Testing put/pop ${base_name}â€¦"
    ref=`evr post-file "files/${base_name}.txt"`
    echo "evr reported ref ${ref}"
    echo "evr get-file ${ref}"
    evr get-file "${ref}" > "files/${base_name}.get.txt"
    echo "Comparing ${base_name} posted with get file"
    diff "files/${base_name}.txt" "files/${base_name}.get.txt"
    echo "${base_name} file looks good"
}

test_file_put_pop "hello"

# produce a 32mb file
dd if=/dev/random bs=4096 count=8192 of=files/big.txt
test_file_put_pop "big"

# it should use custom title if -t arg present
ref=`evr post-file -t 'my file name' 'files/hello.txt' | sed 's/\(sha3-.*\)-[a-z0-9]\{4\}/\1/'`

claim=`evr get ${ref}`
if [[ "${claim}" != *"my file name"* ]]
then
    echo "Claim should have used title 'my file name': ${claim}" >&2
    exit 1
fi

claim=`evr get-verify ${ref}`
if [[ "${claim}" != *"my file name"* ]]
then
    echo "Claim should have used title 'my file name': ${claim}" >&2
    exit 1
fi

claim=`evr get-verify --annotate ${ref}`
if [[ "${claim}" != *"claim-ref=\"${ref}-0000\""* ]]
then
    echo "Claim should contain claim-ref attribute: ${claim}" >&2
    exit 1
fi
if [[ "${claim}" != *"seed=\"${ref}-0000\""* ]]
then
    echo "Claim should contain seed attribute: ${claim}" >&2
    exit 1
fi

# it should read from stdin if file argument is missing
ref=`echo 'piped content from file' | evr post-file`
content=`evr get-file ${ref}`
if [[ 'piped content from file' != "${content}" ]]
then
    echo "Expected 'piped content from file' but got: ${content}" >&2
    exit 1
fi

# evr get-claim
claim=`evr get-claim ${ref}`
if [[ "${claim}" != "<?xml version=\"1.0\" encoding=\"UTF-8\"?>
<file xmlns=\"https://evr.ma300k.de/claims/\">
  <body>
   <slice ref=\"sha3-224-983df141d42447fd2b6661fd4f5af62f671f11703076b994f104f69e\" size=\"24\"/>
  </body>
 </file>" ]]
then
    echo "Retrieved unexpected claim: ${claim}" >&2
    exit 1
fi

if [[ "${HAS_FUSE}" == 'true' ]]
then
    mount_evr_glacier_fs

    find_mnt=`find ${evr_glacier_fs_mnt_dir}`
    if [[ "${find_mnt}" != "${evr_glacier_fs_mnt_dir}
${evr_glacier_fs_mnt_dir}/file" ]]
    then
        echo "Unexpected find ${evr_glacier_fs_mnt_dir} result: ${find_mnt}" >&2
        exit 1
    fi

    ls_ref=`ls ${evr_glacier_fs_mnt_dir}/file/${ref}`
    if [[ "${ls_ref}" != "${evr_glacier_fs_mnt_dir}/file/${ref}" ]]
    then
        echo "Unexpected ls ${evr_glacier_fs_mnt_dir}/file/${ref} result: ${ls_ref}" >&2
        exit 1
    fi

    cat_ref=`cat ${evr_glacier_fs_mnt_dir}/file/${ref}`
    if [[ "${cat_ref}" != 'piped content from file' ]]
    then
        echo "Unexpected cat ${evr_glacier_fs_mnt_dir}/file/${ref} result: ${cat_ref}" >&2
        exit 1
    fi

    slow-read "${evr_glacier_fs_mnt_dir}/file/${ref}"
fi
