#!/bin/bash
set -e
set -o pipefail
. ../config

allocate_ports
write_evr_conf
trap stop_everarch_servers EXIT

# start evr-attr-index server without evr-glacier-storage running. it
# should terminate.
timeout_ret=0
timeout 10s evr-attr-index || timeout_ret=$?
# timeout_status 124 indicates a timeout
if [[ "${timeout_status}" == "124" ]]
then
    echo "evr-attr-index did not terminate with missing evr-glacier-storage" >&2
    exit 1
fi
if [[ "${timeout_ret}" == "0" ]]
then
    echo "evr-attr-index ended with return code ${timeout_ret}" >&2
    exit 1
fi

start_glacier_storage
wait_for_glacier_storage

# upload a broken XSLT attr-spec and make sure that the server does
# not crash but ignore it.
echo "Uploading broken XSLT attr-spec…"
broken_xslt_ref=`echo 'computer, index data!' | evr put`
evr -f 3 sign-put <<EOF
<?xml version="1.0" encoding="UTF-8"?>
<claim-set
    xmlns="https://evr.ma300k.de/claims/"
    xmlns:dc="http://purl.org/dc/terms/"
    dc:created="2022-01-01T00:00:00.000000Z"
    >
  <attr-spec>
    <attr-def k="tag" type="str"/>
    <attr-def k="title" type="str"/>
    <transformation type="xslt" blob="${broken_xslt_ref}"/>
  </attr-spec>
</claim-set>
EOF

# upload a invalid XSLT attr-spec and make sure that the server does
# not crash but ignore it.
echo "Uploading invalid XSLT attr-spec…"
invalid_xslt_ref=`echo '<xml></xml>' | evr put`
evr -f 3 sign-put <<EOF
<?xml version="1.0" encoding="UTF-8"?>
<claim-set
    xmlns="https://evr.ma300k.de/claims/"
    xmlns:dc="http://purl.org/dc/terms/"
    dc:created="2022-02-01T00:00:00.000000Z"
    >
  <attr-spec>
    <attr-def k="tag" type="str"/>
    <attr-def k="title" type="str"/>
    <transformation type="xslt" blob="${invalid_xslt_ref}"/>
  </attr-spec>
</claim-set>
EOF

echo "Uploading basic attr-spec…"
basic_xslt_ref=`evr put < basic.xslt`
evr -f 3 sign-put <<EOF
<?xml version="1.0" encoding="UTF-8"?>
<claim-set
    xmlns="https://evr.ma300k.de/claims/"
    xmlns:dc="http://purl.org/dc/terms/"
    dc:created="2022-03-01T00:00:00.000000Z"
    >
  <attr-spec>
    <attr-def k="tag" type="str"/>
    <attr-def k="title" type="str"/>
    <attr-def k="capital" type="claim-ref"/>
    <transformation type="xslt" blob="${basic_xslt_ref}"/>
  </attr-spec>
</claim-set>
EOF

echo "Uploading test claims…"
test_ref=`evr -f 1 sign-put < attr-claim-1.xml`
test2_ref=`evr -f 1 sign-put < attr-claim-2.xml`
evr -f 1 sign-put < attr-claim-future.xml

berlin_ref=`evr -f 1 sign-put < berlin-claim.xml`
germany_ref=`evr -f 1 sign-put <<EOF
<?xml version="1.0" encoding="UTF-8"?>
<claim-set
    xmlns="https://evr.ma300k.de/claims/"
    xmlns:dc="http://purl.org/dc/terms/"
    dc:created="2022-10-24T01:00:00.000000Z"
    >
  <attr>
    <a op="=" k="title" v="Germany"/>
    <a op="=" k="capital" v="${berlin_ref}-0000"/>
  </attr>
</claim-set>
EOF`

echo "Test refs"
echo "	berlin_ref ${berlin_ref}"
echo "	germany_ref ${germany_ref}"

# upload a broken claim-sets. should be ignored by evr-attr-index.
for cs in broken-claim.xml no-created-claim-set.xml no-seed-claim-set.xml
do
    evr -f 1 sign-put < "${cs}"
done

start_attr_index
wait_for_attr_index

echo "Running test queries…"
results=`query_attr_index 's tag=no-such-tag-exists'`
if [[ "${results}" != "OK" ]]
then
    echo "Unexpected result from tag=no-such-tag-exists query: ${results}" >&2
    exit 1
fi

results=`query_attr_index 's tag=todo'`
if [[ "${results}" != "OK
${test_ref}-0000" ]]
then
    echo "Unexpected result from tag=todo query: ${results}" >&2
    exit 1
fi

results=`query_attr_index 's select * where tag=todo'`
if [[ "${results}" != "OK
${test_ref}-0000
	tag=todo
	title=test claim" ]]
then
    echo "Unexpected result from select * where tag=todo query: ${results}" >&2
    exit 1
fi

seed_desc=`evr desc-seed "${test_ref}-0000"`
if [[ "${seed_desc}" != *"test claim"* ]]
then
    echo "Unexpected result from evr desc-seed: ${seed_desc}" >&2
    exit 1
fi

seed_desc=`evr desc-seed -T capital "${germany_ref}-0000"`
if [[ "${seed_desc}" != *"Berlin"* ]]
then
    echo "Unexpected result from evr desc-seed -T capital germany: ${seed_desc}" >&2
    exit 1
fi

results=`query_attr_index "s select * where ref=${test_ref}-0000"`
if [[ "${results}" != "OK
${test_ref}-0000
	tag=todo
	title=test claim" ]]
then
    echo "Unexpected result from 'select * where s ref=${test_ref}-0000' query: ${results}" >&2
    exit 1
fi

results=`query_attr_index 's waduup?'`
if [[ "${results}" != "ERROR syntax error, unexpected UNKNOWN, expecting EQ or CONTAINS" ]]
then
    echo "Unexpected result from 's waruup?' query: ${results}" >&2
    exit 1
fi

results=`query_attr_index "c ${test_ref}-0000"`
if [[ "${results}" != "${test_ref}-0000" ]]
then
    echo "Unexpected result from 'c ${test_ref}-0000' query: ${results}" >&2
    exit 1
fi

# this test has a space character after the 's'
results=`query_attr_index 's '`
if [[ "${results}" != "OK
${germany_ref}-0000
${berlin_ref}-0000
${test2_ref}-0000
${test_ref}-0000" ]]
then
    echo "Unexpected result from empty expression search query: ${results}" >&2
    exit 1
fi

# this test has no space character after the 's'
results=`query_attr_index 's'`
if [[ "${results}" != "OK
${germany_ref}-0000
${berlin_ref}-0000
${test2_ref}-0000
${test_ref}-0000" ]]
then
    echo "Unexpected result from empty expression search query: ${results}" >&2
    exit 1
fi

results=`evr search ''`
if [[ "${results}" != "${germany_ref}-0000
${berlin_ref}-0000
${test2_ref}-0000
${test_ref}-0000" ]]
then
    echo "Unexpected evr cli result from empty expression search query: ${results}" >&2
    exit 1
fi

results=`evr search -l 1 ''`
if [[ "${results}" != "${germany_ref}-0000" ]]
then
    echo "Unexpected evr cli result from empty expression search query: ${results}" >&2
    exit 1
fi

results=`evr search -l 0 ''`
if [[ "${results}" != "${germany_ref}-0000
${berlin_ref}-0000
${test2_ref}-0000
${test_ref}-0000" ]]
then
    echo "Unexpected evr cli result from empty expression search query: ${results}" >&2
    exit 1
fi

echo "Stopping…"
