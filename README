everarch - the hopefully ever lasting archive

1) Introduction
2) Build & Installation
3) Usage
4) Tests
5) License
6) Contact


------------------------------------------------------------------------
Introduction

everarch is a collection of applications to store your personal
data. The goals of everarch are:

- store your tiny and GB sized files
- provide a customized index over your data
- make backups complete and fast
- store your data in a format which you still can read in 20 years in
  _future programming language_
- store your data in a way that allows you to easily adopt new data
  structures without the need to migrate the existing data
- detect corrupt or externally modified data and restore it with a
  partial backup

What everarch is not:

- a database which handles inserts every few milliseconds over a long
  amount of time very well
- a multi user storage with fine grained access permissions

everarch is right now in a pre alpha state. It's not intended to be
used for your production data yet. Check out the backlog file to see
what we are heading for in the v0.1 release.


------------------------------------------------------------------------
Build & Installation

Install the dependencies:

$ apt install libgpgme-dev libgcrypt-dev libsqlite3-dev libxml2-dev libxslt1-dev flex bison texinfo elpa-helm

On linux you can execute the following within the everarch directory
to build the application.

Setup the build system once after you clone the repository:

$ autoreconf --install
$ ./configure

There are some feature toggles available with the configure
script. For example --enable-futile-claim-set-tracking. List them
with:

$ ./configure --help

Run every time you want to build the applications:

$ make

Install the applications:

$ make install


------------------------------------------------------------------------
Usage

A detailed manual can be found in src/evr.texi.


------------------------------------------------------------------------
Tests

Executing the tests requires a GPG key usable for signing. If you
don't have one it can be created using:

$ gpg --gen-key

Execute the following to run the whole test suite with unit and
integration tests:

$ ./test.sh

Test execution relies on valgrind ( https://www.valgrind.org ) and
socat ( http://www.dest-unreach.org/socat/ ).

You can customize some integration test variables for you local
system's needs if you create the file testing/suite/config.local. See
testing/suite/config for potential variables.


------------------------------------------------------------------------
License

See COPYING for details about everarch files copying conditions.

There are a few files which got a different license. See their header
comments for more details. These files include at least:

src/rollsum.h
src/rollsum.c

My sincere thank you goes out to the original authors Martin Pool and
Donovan Baarda.


------------------------------------------------------------------------
Contact

For questions about everarch you can contact me via email at Markus
Per√∂bner <markus.peroebner@gmail.com>.
